import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
BOT_TOKEN = os.getenv("BOT_TOKEN", "YOUR_BOT_TOKEN_HERE")

# URL –≤–∞—à–µ–≥–æ FastAPI —Å–µ—Ä–≤–µ—Ä–∞
API_URL = os.getenv("API_URL", "http://localhost:8000")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üöó –û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É", 
            web_app=WebAppInfo(url=f"{API_URL}/webapp")
        )]
    ])
    
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–∞–∫—Å–∏!\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:\n"
        "‚Ä¢ –°—Ç–∞—Ç—É—Å–æ–º –ø–æ–µ–∑–¥–∫–∏\n"
        "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ–º —á–µ–∫–æ–≤\n"
        "‚Ä¢ –†–∞–±–æ—Ç–æ–π —Å –∫–∞—Ä—Ç–∞–º–∏\n"
        "‚Ä¢ –û—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:",
        reply_markup=keyboard
    )

@dp.message(Command("help"))
async def help_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/support - –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏

üì± **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–µ–∑–¥–∫–∏
‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫ –∑–∞ –ø–æ–µ–∑–¥–∫—É
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–∞–º–∏ –æ–ø–ª–∞—Ç—ã
‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–∑ FAQ
‚Ä¢ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É

üí¨ **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–ì–¥–µ –º–æ–π –≤–æ–¥–∏—Ç–µ–ª—å?"
‚Ä¢ "–ü—Ä–∏—à–ª–∏—Ç–µ —á–µ–∫"
‚Ä¢ "–ö–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ü–µ–Ω–∞?"
‚Ä¢ "–° –º–µ–Ω—è —Å–ø–∏—Å–∞–ª–∏ –¥–≤–∞–∂–¥—ã"
"""
    await message.answer(help_text, parse_mode="Markdown")

@dp.message(Command("support"))
async def support_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üí¨ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏", 
            web_app=WebAppInfo(url=f"{API_URL}/webapp")
        )]
    ])
    
    await message.answer(
        "üí¨ –û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º:",
        reply_markup=keyboard
    )

@dp.message()
async def text_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ WebApp"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üí¨ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏", 
            web_app=WebAppInfo(url=f"{API_URL}/webapp")
        )]
    ])
    
    await message.answer(
        f"üí¨ –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '{message.text}' –æ—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:",
        reply_markup=keyboard
    )

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
