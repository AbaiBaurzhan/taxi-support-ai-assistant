#!/usr/bin/env python3
"""
üöó APARU Taxi Support AI Assistant - Universal Launcher
–ó–∞–ø—É—Å–∫–∞–µ—Ç –í–°–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π!
"""

import os
import sys
import subprocess
import time
import webbrowser
import threading
import signal
from pathlib import Path

class APARULauncher:
    def __init__(self):
        self.processes = []
        self.running = True
        
    def print_banner(self):
        print("=" * 70)
        print("üöó APARU Taxi Support AI Assistant")
        print("=" * 70)
        print("üìÅ –ü—Ä–æ–µ–∫—Ç: –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–∞–∫—Å–∏")
        print("üåê Production: https://taxi-support-ai-assistant-production.up.railway.app")
        print("üì± Bot: @Aparu_support_bot")
        print("=" * 70)
        
    def check_files(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
        required_files = [
            "main.py", "bot.py", "webapp.html", 
            "llm_client.py", "kb.json", "fixtures.json",
            "requirements.txt"
        ]
        
        missing_files = []
        for file in required_files:
            if not Path(file).exists():
                missing_files.append(file)
        
        if missing_files:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
            return False
        
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã")
        return True
        
    def install_dependencies(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
        print("üì¶ –ü—Ä–æ–≤–µ—Ä—è—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
        
        try:
            import fastapi, uvicorn, aiogram, requests, langdetect
            print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return True
        except ImportError:
            print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
        try:
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã pip
            pip_commands = [
                [sys.executable, "-m", "pip", "install", "-r", "requirements.txt"],
                ["pip3", "install", "-r", "requirements.txt"],
                ["pip", "install", "-r", "requirements.txt"]
            ]
            
            for cmd in pip_commands:
                try:
                    result = subprocess.run(cmd, check=True, capture_output=True, text=True)
                    print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
                    return True
                except (subprocess.CalledProcessError, FileNotFoundError):
                    continue
            
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
            return False
                
    def start_api_server(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç FastAPI —Å–µ—Ä–≤–µ—Ä"""
        print("üöÄ –ó–∞–ø—É—Å–∫–∞—é API —Å–µ—Ä–≤–µ—Ä...")
        
        try:
            process = subprocess.Popen(
                [sys.executable, "main.py"],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            time.sleep(3)
            
            if process.poll() is None:
                print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
                self.processes.append(("API Server", process))
                return True
            else:
                stdout, stderr = process.communicate()
                print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è: {stderr}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API: {e}")
            return False
            
    def start_telegram_bot(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram Bot"""
        print("ü§ñ –ó–∞–ø—É—Å–∫–∞—é Telegram Bot...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        bot_token = os.getenv("BOT_TOKEN")
        if not bot_token or bot_token == "YOUR_BOT_TOKEN_HERE":
            print("‚ö†Ô∏è  BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            print("üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: export BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
            print("üîó –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω: https://t.me/BotFather")
            return False
        
        try:
            process = subprocess.Popen(
                [sys.executable, "bot.py"],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            time.sleep(2)
            
            if process.poll() is None:
                print("‚úÖ Telegram Bot –∑–∞–ø—É—â–µ–Ω")
                self.processes.append(("Telegram Bot", process))
                return True
            else:
                stdout, stderr = process.communicate()
                print(f"‚ùå Bot –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è: {stderr}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Bot: {e}")
            return False
            
    def open_webapp(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç WebApp –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        print("üåê –û—Ç–∫—Ä—ã–≤–∞—é WebApp...")
        
        webapp_url = "http://localhost:8000/webapp"
        try:
            webbrowser.open(webapp_url)
            print(f"‚úÖ WebApp –æ—Ç–∫—Ä—ã—Ç: {webapp_url}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è WebApp: {e}")
            return False
            
    def test_api(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é API...")
        
        try:
            import requests
            time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ API
            
            # –¢–µ—Å—Ç health
            response = requests.get("http://localhost:8000/health", timeout=5)
            if response.status_code == 200:
                print("‚úÖ API Health Check: OK")
                
                # –¢–µ—Å—Ç chat
                test_data = {
                    "text": "–ì–¥–µ –≤–æ–¥–∏—Ç–µ–ª—å?",
                    "user_id": "test123",
                    "locale": "RU"
                }
                
                response = requests.post("http://localhost:8000/chat", 
                                       json=test_data, timeout=5)
                if response.status_code == 200:
                    print("‚úÖ API Chat: OK")
                    return True
                else:
                    print(f"‚ùå API Chat: {response.status_code}")
                    return False
            else:
                print(f"‚ùå API Health: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return False
            
    def show_status(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        print("\nüìä –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:")
        print("=" * 40)
        
        for name, process in self.processes:
            if process.poll() is None:
                print(f"‚úÖ {name}: –ó–∞–ø—É—â–µ–Ω")
            else:
                print(f"‚ùå {name}: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
        print("\nüîó –°—Å—ã–ª–∫–∏:")
        print("  üåê WebApp: http://localhost:8000/webapp")
        print("  üì° API: http://localhost:8000/chat")
        print("  ‚ù§Ô∏è  Health: http://localhost:8000/health")
        print("  üì± Bot: @Aparu_support_bot")
        
    def cleanup(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...")
        
        for name, process in self.processes:
            if process.poll() is None:
                print(f"‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {name}...")
                process.terminate()
                try:
                    process.wait(timeout=5)
                except subprocess.TimeoutExpired:
                    process.kill()
                    
        print("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
        self.running = False
        self.cleanup()
        sys.exit(0)
        
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self.signal_handler)
        signal.signal(signal.SIGTERM, self.signal_handler)
        
        self.print_banner()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
        if not self.check_files():
            return
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if not self.install_dependencies():
            return
            
        print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:")
        print("1. üöÄ –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ (API + Bot + WebApp)")
        print("2. üì° –¢–æ–ª—å–∫–æ API —Å–µ—Ä–≤–µ—Ä")
        print("3. ü§ñ –¢–æ–ª—å–∫–æ Telegram Bot")
        print("4. üåê –¢–æ–ª—å–∫–æ WebApp")
        print("5. üß™ –¢–µ—Å—Ç API")
        print("6. üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
        print("0. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\nüëâ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-6): ").strip()
        
        if choice == "1":
            # –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫
            print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç APARU...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º API
            if not self.start_api_server():
                return
                
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
            if not self.test_api():
                print("‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—é...")
                
            # –ó–∞–ø—É—Å–∫–∞–µ–º Bot
            self.start_telegram_bot()
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º WebApp
            self.open_webapp()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
            self.show_status()
            
            print("\nüéâ –ü—Ä–æ–µ–∫—Ç APARU –∑–∞–ø—É—â–µ–Ω!")
            print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            try:
                while self.running:
                    time.sleep(1)
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                    for name, process in self.processes:
                        if process.poll() is not None:
                            print(f"‚ö†Ô∏è  {name} –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
            except KeyboardInterrupt:
                pass
                
        elif choice == "2":
            # –¢–æ–ª—å–∫–æ API
            if self.start_api_server():
                self.test_api()
                self.show_status()
                print("\n‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
                try:
                    while self.running:
                        time.sleep(1)
                except KeyboardInterrupt:
                    pass
                    
        elif choice == "3":
            # –¢–æ–ª—å–∫–æ Bot
            if self.start_telegram_bot():
                self.show_status()
                print("\n‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
                try:
                    while self.running:
                        time.sleep(1)
                except KeyboardInterrupt:
                    pass
                    
        elif choice == "4":
            # –¢–æ–ª—å–∫–æ WebApp
            self.open_webapp()
            
        elif choice == "5":
            # –¢–µ—Å—Ç API
            if self.start_api_server():
                self.test_api()
                
        elif choice == "6":
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            self.show_project_info()
            
        elif choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            
        # –û—á–∏—Å—Ç–∫–∞
        self.cleanup()
        
    def show_project_info(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ"""
        print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ APARU:")
        print("=" * 50)
        print("üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞:")
        print("  ‚îú‚îÄ‚îÄ main.py              # FastAPI —Å–µ—Ä–≤–µ—Ä")
        print("  ‚îú‚îÄ‚îÄ bot.py               # Telegram Bot")
        print("  ‚îú‚îÄ‚îÄ webapp.html          # WebApp –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        print("  ‚îú‚îÄ‚îÄ llm_client.py        # LLM –∫–ª–∏–µ–Ω—Ç")
        print("  ‚îú‚îÄ‚îÄ kb.json              # –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π FAQ")
        print("  ‚îú‚îÄ‚îÄ fixtures.json        # –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("  ‚îú‚îÄ‚îÄ requirements.txt     # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("  ‚îî‚îÄ‚îÄ start_aparu.py       # üöÄ –≠—Ç–æ—Ç –ª–∞—É–Ω—á–µ—Ä")
        
        print("\nüîó –°—Å—ã–ª–∫–∏:")
        print("  üåê WebApp: http://localhost:8000/webapp")
        print("  üì° API: http://localhost:8000/chat")
        print("  ‚ù§Ô∏è  Health: http://localhost:8000/health")
        print("  üì± Bot: @Aparu_support_bot")
        print("  üåê Production: https://taxi-support-ai-assistant-production.up.railway.app")
        
        print("\n‚öôÔ∏è  –ö–æ–º–∞–Ω–¥—ã:")
        print("  üöÄ –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫: python3 start_aparu.py")
        print("  üì° –¢–æ–ª—å–∫–æ API: python3 main.py")
        print("  ü§ñ –¢–æ–ª—å–∫–æ Bot: python3 bot.py")
        print("  üß™ –¢–µ—Å—Ç API: curl http://localhost:8000/health")
        
        print("\nüìã –§—É–Ω–∫—Ü–∏–∏:")
        print("  ‚úÖ REST API —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–º /chat")
        print("  ‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ (RU/KZ/EN)")
        print("  ‚úÖ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("  ‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π FAQ")
        print("  ‚úÖ –ú–æ–∫–∏ —Ç–∞–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–∞")
        print("  ‚úÖ Telegram Bot + WebApp")
        print("  ‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ Railway")

def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    launcher = APARULauncher()
    launcher.run()

if __name__ == "__main__":
    main()
