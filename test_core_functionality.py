#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –¢–†–ï–•–£–†–û–í–ù–ï–í–û–ô –°–ò–°–¢–ï–ú–´

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import requests
import json
import time

API_BASE = "http://localhost:8000"

def test_core_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –¢–†–ï–•–£–†–û–í–ù–ï–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 70)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
    tests = [
        {
            "name": "–ö–ª—é—á–µ–≤–æ–π —Ç–µ—Å—Ç 1: '–¥–æ—Å—Ç–∞–≤–∫–∞'",
            "query": "–¥–æ—Å—Ç–∞–≤–∫–∞",
            "expected_keywords": ["–¥–æ—Å—Ç–∞–≤–∫–∞", "–∫—É—Ä—å–µ—Ä"]
        },
        {
            "name": "–ö–ª—é—á–µ–≤–æ–π —Ç–µ—Å—Ç 2: '—á—Ç–æ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∞–≤–∫–∞'", 
            "query": "—á—Ç–æ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∞–≤–∫–∞",
            "expected_keywords": ["–¥–æ—Å—Ç–∞–≤–∫–∞", "—É—Å–ª—É–≥–∞"]
        },
        {
            "name": "–ö–ª—é—á–µ–≤–æ–π —Ç–µ—Å—Ç 3: '–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞'",
            "query": "–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞", 
            "expected_keywords": ["—Ä–∞–±–æ—Ç–∞–µ—Ç", "—Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º"]
        },
        {
            "name": "–¢–µ—Å—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞",
            "query": "–∫–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
            "expected_keywords": ["–±–∞–ª–∞–Ω—Å", "–ø–æ–ø–æ–ª–Ω–∏—Ç—å"]
        },
        {
            "name": "–¢–µ—Å—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–µ–∑–¥–∫–∏",
            "query": "—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–æ–µ–∑–¥–∫–∞",
            "expected_keywords": ["—Ü–µ–Ω–∞", "—Å—Ç–æ–∏–º–æ—Å—Ç—å"]
        }
    ]
    
    success_count = 0
    total_count = len(tests)
    
    for i, test in enumerate(tests, 1):
        print(f"\nüß™ –¢–µ—Å—Ç {i}/{total_count}: {test['name']}")
        print(f"üìù –ó–∞–ø—Ä–æ—Å: '{test['query']}'")
        
        try:
            response = requests.post(
                f"{API_BASE}/chat",
                json={
                    "text": test["query"],
                    "user_id": "test_user_core",
                    "locale": "ru"
                },
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ")
                print(f"   üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {data.get('confidence', 0):.2f}")
                print(f"   üîç –ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source', '')}")
                print(f"   üéØ Intent: {data.get('intent', '')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                response_text = data.get("response", "").lower()
                found_keywords = [kw for kw in test["expected_keywords"] if kw.lower() in response_text]
                
                if found_keywords:
                    print(f"   üîë –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {found_keywords}")
                    print(f"   üí¨ –û—Ç–≤–µ—Ç: {data.get('response', '')[:80]}...")
                    success_count += 1
                else:
                    print(f"   ‚ö†Ô∏è –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    print(f"   üí¨ –û—Ç–≤–µ—Ç: {data.get('response', '')[:80]}...")
                
            else:
                print(f"‚ùå HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}/{total_count}")
    print(f"   üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(success_count/total_count*100):.1f}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
    if success_count >= 4:  # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å
        print(f"\nüéâ –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ –†–ê–ë–û–¢–ê–ï–¢!")
        print(f"‚úÖ –¢—Ä–µ—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print(f"‚úÖ –†–∞–∑–ª–∏—á–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"‚úÖ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–µ–Ω")
    else:
        print(f"\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê")
    
    return success_count >= 4

if __name__ == "__main__":
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    for i in range(10):
        try:
            response = requests.get(f"{API_BASE}/health", timeout=2)
            if response.status_code == 200:
                print("‚úÖ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤")
                break
        except:
            time.sleep(1)
            print(f"   –ü–æ–ø—ã—Ç–∫–∞ {i+1}/10...")
    else:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_core_scenarios()
    
    if success:
        print(f"\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö PRODUCTION!")
    else:
        print(f"\nüîß –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê")
