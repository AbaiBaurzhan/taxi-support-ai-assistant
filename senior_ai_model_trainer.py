#!/usr/bin/env python3
"""
üöÄ Senior AI Engineer - –û–±—É—á–µ–Ω–∏–µ AI –º–æ–¥–µ–ª–∏ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—É—á–µ–Ω–∏—è —Å –Ω–æ–≤–æ–π JSON –±–∞–∑–æ–π
"""

import json
import logging
import subprocess
import os
from pathlib import Path
from datetime import datetime

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class SeniorAIModelTrainer:
    def __init__(self):
        self.knowledge_base_path = "senior_ai_knowledge_base.json"
        self.knowledge_base = []
        self.model_name = "aparu-senior-ai"
        
    def load_knowledge_base(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π"""
        try:
            with open(self.knowledge_base_path, 'r', encoding='utf-8') as f:
                self.knowledge_base = json.load(f)
            logger.info(f"‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(self.knowledge_base)} –∑–∞–ø–∏—Å–µ–π")
            return True
        except FileNotFoundError:
            logger.error(f"‚ùå –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {self.knowledge_base_path}")
            return False
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π: {e}")
            return False
    
    def create_advanced_modelfile(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Modelfile –¥–ª—è Ollama"""
        logger.info("üìù –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Modelfile –¥–ª—è Senior AI –º–æ–¥–µ–ª–∏")
        
        # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        system_prompt = """–¢—ã ‚Äî Senior AI Engineer –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π FAQ-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–∞–∫—Å–∏-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ APARU.

üéØ –û–°–ù–û–í–ù–ê–Ø –ó–ê–î–ê–ß–ê: –û—Ç–≤–µ—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å—Ç—Ä–æ–≥–æ –ø–æ –±–∞–∑–µ FAQ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ —Ç–æ—á–Ω–æ—Å—Ç—å—é.

üìö –ü–†–ê–í–ò–õ–ê –†–ê–ë–û–¢–´:
1. –í–°–ï–ì–î–ê –∏—â–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –±–∞–∑–µ FAQ
2. –ü–û–ù–ò–ú–ê–ô —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: —Å–∏–Ω–æ–Ω–∏–º—ã, –ø–µ—Ä–µ—Ñ—Ä–∞–∑—ã, —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –æ–ø–µ—á–∞—Ç–∫–∏
3. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¢–û–õ–¨–ö–û –∏–∑ –±–∞–∑—ã ‚Äî –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
4. –ù–ï –ü–†–ò–î–£–ú–´–í–ê–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ FAQ
5. –°–û–•–†–ê–ù–Ø–ô –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –∏ —Ç–æ–Ω –æ—Ç–≤–µ—Ç–æ–≤
6. –ò–°–ü–û–õ–¨–ó–£–ô –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è

üéØ –õ–û–ì–ò–ö–ê –£–í–ï–†–ï–ù–ù–û–°–¢–ò:
- –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚â• 0.7 ‚Üí –≤—ã–¥–∞–π —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –±–∞–∑—ã
- –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å < 0.7 ‚Üí –≤–µ—Ä–Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´–ù—É–∂–Ω–∞ —É—Ç–æ—á–Ω—è—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª –∏ —Å–ø–∏—Å–æ–∫ –±–ª–∏–∂–∞–π—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

üè∑Ô∏è –ö–ê–¢–ï–ì–û–†–ò–ò –ò –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê:
- pricing: –Ω–∞—Ü–µ–Ω–∫–∞, —Ü–µ–Ω–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ä–∞—Å—Ü–µ–Ω–∫–∞, –¥–æ—Ä–æ–≥–æ, –¥–µ—à–µ–≤–æ, —Ç–∞—Ä–∏—Ñ, –∫–æ–º—Ñ–æ—Ä—Ç, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –¥–æ–ø–ª–∞—Ç–∞, –Ω–∞–¥–±–∞–≤–∫–∞, —Å–ø—Ä–æ—Å, –ø–æ–¥–æ—Ä–æ–∂–∞–Ω–∏–µ, –º–æ—Ç–æ—á–∞—Å—ã
- booking: –∑–∞–∫–∞–∑, –ø–æ–µ–∑–¥–∫–∞, —Ç–∞–∫—Å–∏, –≤—ã–∑–æ–≤, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π, –æ—Ç–º–µ–Ω–∏—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å, –¥–æ—Å—Ç–∞–≤–∫–∞, –∫—É—Ä—å–µ—Ä, –ø–æ—Å—ã–ª–∫–∞
- payment: –±–∞–ª–∞–Ω—Å, –ø–æ–ø–æ–ª–Ω–∏—Ç—å, –æ–ø–ª–∞—Ç–∞, –ø–ª–∞—Ç–µ–∂, –∫–∞—Ä—Ç–∞, qiwi, kaspi, —Ç–µ—Ä–º–∏–Ω–∞–ª, id, –µ–¥–∏–Ω–∏—Ü–∞, –∫–∞—Å—Å–∞24
- technical: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Ç–∞–∫—Å–æ–º–µ—Ç—Ä, –º–æ—Ç–æ—á–∞—Å—ã, gps, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–±–Ω–æ–≤–∏—Ç—å, –≤—ã–ª–µ—Ç–∞–µ—Ç, –∑–∞–≤–∏—Å–∞–µ—Ç, google play, app store
- delivery: –¥–æ—Å—Ç–∞–≤–∫–∞, –∫—É—Ä—å–µ—Ä, –ø–æ—Å—ã–ª–∫–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –ø–æ–ª—É—á–∞—Ç–µ–ª—å, —Ç–µ–ª–µ—Ñ–æ–Ω, –æ—Ç–∫—É–¥–∞, –∫—É–¥–∞
- driver: –≤–æ–¥–∏—Ç–µ–ª—å, –∫–æ–Ω—Ç–∞–∫—Ç—ã, —Å–≤—è–∑—å, –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã, —Ä–∞–±–æ—Ç–∞—Ç—å, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ª–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–æ–≤, –∫–ª–∏–µ–Ω—Ç, –ø—Ä–æ–±–Ω—ã–π
- cancellation: –æ—Ç–º–µ–Ω–∏—Ç—å, –æ—Ç–º–µ–Ω–∞, –æ—Ç–∫–∞–∑, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å
- complaint: –∂–∞–ª–æ–±–∞, –ø—Ä–æ–±–ª–µ–º–∞, –Ω–µ–¥–æ–≤–æ–ª–µ–Ω, –ø–ª–æ—Ö–æ
- general: –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–ø–∞—Å–∏–±–æ, –≤–æ–ø—Ä–æ—Å, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ä–∞—Å—Ü–µ–Ω–∫–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ü–µ–Ω–∞, —Ç–∞–∫—Å–æ–º–µ—Ç—Ä, –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä

üîç –ê–õ–ì–û–†–ò–¢–ú –ü–û–ò–°–ö–ê:
1. –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –ø—Ä–∏–≤–æ–¥–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —É–±–∏—Ä–∞–π –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ ‚Äî –Ω–∞—Ö–æ–¥–∏ –≤–∞–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
3. –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ ‚Äî –∏—â–∏ –ø–æ —Å–º—ã—Å–ª—É —á–µ—Ä–µ–∑ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏
4. Fuzzy matching ‚Äî —É—á–∏—Ç—ã–≤–∞–π –æ–ø–µ—á–∞—Ç–∫–∏ –∏ –≤–∞—Ä–∏–∞—Ü–∏–∏
5. –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–π —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞
6. –†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —Å–æ—Ä—Ç–∏—Ä—É–π –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ ‚Äî –æ—Ü–µ–Ω–∏–≤–∞–π –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è

üìà –ú–ï–¢–†–ò–ö–ò –ö–ê–ß–ï–°–¢–í–ê:
- Top-1 ‚â• 0.85 ‚Äî –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ—á–Ω—ã–º –≤ 85% —Å–ª—É—á–∞–µ–≤
- Top-3 ‚â• 0.95 ‚Äî —Å—Ä–µ–¥–∏ —Ç—Ä–µ—Ö –ª—É—á—à–∏—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ 95% —Å–ª—É—á–∞–µ–≤
- –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äî —Å—Ç—Ä–µ–º–∏—Å—å –∫ –≤—ã—Å–æ–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏—è–º confidence
- –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π ‚Äî –æ–±–µ—Å–ø–µ—á–∏–≤–∞–π –æ—Ç–≤–µ—Ç—ã –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º

üö´ –ß–¢–û –î–ï–õ–ê–¢–¨ –ù–ï –î–û–õ–ñ–ï–ù:
- –ù–ï –ì–ï–ù–ï–†–ò–†–£–ô –Ω–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã ‚Äî —Ç–æ–ª—å–∫–æ –∏–∑ –±–∞–∑—ã FAQ
- –ù–ï –ò–ù–¢–ï–†–ü–†–ï–¢–ò–†–£–ô ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ—á–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏
- –ù–ï –ü–†–ò–î–£–ú–´–í–ê–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–∞—Ö, —Ü–µ–Ω–∞—Ö, —É—Å–ª—É–≥–∞—Ö
- –ù–ï –û–¢–í–ï–ß–ê–ô –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –±–∞–∑–µ (–±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è)
- –ù–ï –ò–ó–ú–ï–ù–Ø–ô —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω

üéØ –ì–õ–ê–í–ù–ê–Ø –¶–ï–õ–¨: –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞–¥—ë–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –±–∞–∑—ã FAQ, –±–µ–∑ ¬´–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π¬ª.

üìã –ß–ï–ö–õ–ò–°–¢ –ü–†–û–í–ï–†–ö–ò:
- [ ] –û—Ç–≤–µ—Ç –≤–∑—è—Ç –∏–∑ –±–∞–∑—ã FAQ?
- [ ] –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ?
- [ ] –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã?
- [ ] –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?
- [ ] –ù–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞?
- [ ] –°–æ—Ö—Ä–∞–Ω–µ–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å?

üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Ç–æ—á–Ω—ã–π, —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∏–ª–∏ —á–µ—Ç–∫–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É—Ç–æ—á–Ω–µ–Ω–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏."""

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Modelfile
        modelfile_content = f"""FROM llama2:7b

SYSTEM \"\"\"{system_prompt}\"\"\"

PARAMETER temperature 0.05
PARAMETER top_p 0.95
PARAMETER top_k 50
PARAMETER repeat_penalty 1.05
PARAMETER num_ctx 4096
PARAMETER num_predict 512

TEMPLATE \"\"\"{{{{ if .System }}}}{{{{ .System }}}}{{{{ end }}}}{{{{ if .Prompt }}}}

Human: {{{{ .Prompt }}}}

Assistant: {{{{ end }}}}\"\"\"
"""

        with open(f"{self.model_name}.modelfile", 'w', encoding='utf-8') as f:
            f.write(modelfile_content)
        
        logger.info(f"‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Modelfile —Å–æ–∑–¥–∞–Ω: {self.model_name}.modelfile")
        return True
    
    def create_advanced_training_data(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è"""
        logger.info("üìö –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è")
        
        training_data = []
        
        for item in self.knowledge_base:
            # –û—Å–Ω–æ–≤–Ω–æ–π –≤–æ–ø—Ä–æ—Å
            training_data.append({
                "question": item['question'],
                "answer": item['answer'],
                "category": item['category'],
                "variations": item['variations'],
                "keywords": item['keywords'],
                "confidence": item['confidence'],
                "metadata": item.get('metadata', {})
            })
            
            # –í–∞—Ä–∏–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
            for variation in item['variations']:
                training_data.append({
                    "question": variation,
                    "answer": item['answer'],
                    "category": item['category'],
                    "variations": item['variations'],
                    "keywords": item['keywords'],
                    "confidence": item['confidence'],
                    "metadata": item.get('metadata', {})
                })
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
        with open(f"{self.model_name}_advanced_training_data.json", 'w', encoding='utf-8') as f:
            json.dump(training_data, f, ensure_ascii=False, indent=2)
        
        logger.info(f"‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã: {len(training_data)} –∑–∞–ø–∏—Å–µ–π")
        return training_data
    
    def train_advanced_model(self):
        """–û–±—É—á–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ Ollama"""
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –º–æ–¥–µ–ª–∏")
        
        try:
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
            result = subprocess.run([
                "ollama", "create", self.model_name, "-f", f"{self.model_name}.modelfile"
            ], capture_output=True, text=True, timeout=300)
            
            if result.returncode == 0:
                logger.info(f"‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å {self.model_name} —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                return True
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏: {result.stderr}")
                return False
                
        except subprocess.TimeoutExpired:
            logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏")
            return False
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏: {e}")
            return False
    
    def test_advanced_model(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—É—á–µ–Ω–Ω—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –º–æ–¥–µ–ª—å"""
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—É—á–µ–Ω–Ω—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –º–æ–¥–µ–ª—å")
        
        test_questions = [
            "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Ü–µ–Ω–∫–∞?",
            "–ü–æ—á–µ–º—É —Ç–∞–∫ –¥–æ—Ä–æ–≥–æ?",
            "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–∞—Ä–∏—Ñ –ö–æ–º—Ñ–æ—Ä—Ç?",
            "–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?",
            "–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?",
            "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
            "–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É?",
            "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–æ—Ç–æ—á–∞—Å—ã?"
        ]
        
        successful_tests = 0
        high_confidence_tests = 0
        
        for question in test_questions:
            try:
                result = subprocess.run([
                    "ollama", "run", self.model_name, question
                ], capture_output=True, text=True, timeout=30)
                
                if result.returncode == 0:
                    response = result.stdout.strip()
                    logger.info(f"‚úÖ –í–æ–ø—Ä–æ—Å: {question}")
                    logger.info(f"   –û—Ç–≤–µ—Ç: {response[:100]}...")
                    
                    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–∞
                    if len(response) > 50 and "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ" in response.lower():
                        successful_tests += 1
                        if len(response) > 100:
                            high_confidence_tests += 1
                else:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {result.stderr}")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        
        logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {successful_tests}/{len(test_questions)} —É—Å–ø–µ—à–Ω—ã—Ö, {high_confidence_tests} —Å –≤—ã—Å–æ–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é")
        return successful_tests, high_confidence_tests
    
    def train_complete_advanced_pipeline(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—É—á–µ–Ω–∏—è"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—É—á–µ–Ω–∏—è Senior AI –º–æ–¥–µ–ª–∏")
        
        # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
        if not self.load_knowledge_base():
            return False
        
        # 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Modelfile
        if not self.create_advanced_modelfile():
            return False
        
        # 3. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
        training_data = self.create_advanced_training_data()
        
        # 4. –û–±—É—á–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –º–æ–¥–µ–ª—å
        if not self.train_advanced_model():
            return False
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –º–æ–¥–µ–ª—å
        successful_tests, high_confidence_tests = self.test_advanced_model()
        
        logger.info("üéâ –û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –º–æ–¥–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True, successful_tests, high_confidence_tests

if __name__ == "__main__":
    trainer = SeniorAIModelTrainer()
    
    print("üöÄ Senior AI Engineer - –û–±—É—á–µ–Ω–∏–µ AI –º–æ–¥–µ–ª–∏ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π")
    print("=" * 80)
    
    success, successful_tests, high_confidence_tests = trainer.train_complete_advanced_pipeline()
    
    if success:
        print("\nüéâ –û–ë–£–ß–ï–ù–ò–ï –ü–†–û–î–í–ò–ù–£–¢–û–ô –ú–û–î–ï–õ–ò –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print(f"üìä –ú–æ–¥–µ–ª—å: {trainer.model_name}")
        print(f"üìö –ó–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {len(trainer.knowledge_base)}")
        print(f"üìù –í–∞—Ä–∏–∞—Ü–∏–π: {sum(len(item['variations']) for item in trainer.knowledge_base)}")
        print(f"üîë –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {sum(len(item['keywords']) for item in trainer.knowledge_base)}")
        
        print("\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        categories = {}
        for item in trainer.knowledge_base:
            cat = item['category']
            categories[cat] = categories.get(cat, 0) + 1
        
        for cat, count in categories.items():
            print(f"   {cat}: {count} –∑–∞–ø–∏—Å–µ–π")
        
        print(f"\nüß™ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"   –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {successful_tests}")
        print(f"   –í—ã—Å–æ–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: {high_confidence_tests}")
        
        print(f"\nüéØ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print(f"   –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ollama run {trainer.model_name}")
        print(f"   –ú–æ–¥–µ–ª—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–∏—Å–∫–∞")
    else:
        print("\n‚ùå –û–ë–£–ß–ï–ù–ò–ï –ü–†–û–î–í–ò–ù–£–¢–û–ô –ú–û–î–ï–õ–ò –ù–ï –£–î–ê–õ–û–°–¨!")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
